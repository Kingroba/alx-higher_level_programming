=================================
How to Use 101-lazy_matrix_mul.py
=================================

This module defines a matrix multiplication function called `lazy_matrix_mul(m_a, m_b)`.

Usage
=====

The `lazy_matrix_mul(...)` function returns a new matrix representing the multiplication of `m_a` by `m_b`.

Example:
---------
>>> from 101-lazy_matrix_mul import lazy_matrix_mul
>>> m_a = [
...     [1, 2],
...     [3, 4],
... ]
>>> m_b = m_a
>>> print(lazy_matrix_mul(m_a, m_b))
[[ 7 10]
 [15 22]]

The function also works with floating-point numbers.

Example:
---------
>>> m_a = [[1, 2]]
>>> m_b = [
...     [3, 4],
...     [5, 6]
... ]
>>> print(lazy_matrix_mul(m_a, m_b))
[[13 16]]

A minimum of two arguments must be provided.

Example:
---------
>>> print(lazy_matrix_mul(m_a))
Traceback (most recent call last):
    TypeError: lazy_matrix_mul() missing 1 required positional argument: 'm_b'

>>> print(lazy_matrix_mul()) # doctest: +NORMALIZE_WHITESPACE
Traceback (most recent call last):
    TypeError: lazy_matrix_mul() missing 2 required positional arguments: 'm_a' and 'm_b'

ValueErrors
===========

If two matrices cannot be multiplied (i.e., the row count of `m_a` is not equal to the column count in `m_b`), a ValueError is raised.

Example:
---------
>>> m_a = [
...     [1, 2],
...     [3, 4],
... ]
>>> m_b = [
...     [1, 2],
...     [2, 3],
...     [4, 5]
... ]
>>> print(lazy_matrix_mul(m_a, m_b))
Traceback (most recent call last):
    ValueError: shapes (2,2) and (3,2) not aligned: 2 (dim 1) != 3 (dim 0)

The parameters `m_a` and `m_b` cannot be empty. Otherwise, a ValueError is raised.

Example:
---------
>>> print(lazy_matrix_mul([[]], [[5, 6], [7, 8]]))
Traceback (most recent call last):
    ValueError: shapes (1,0) and (2,2) not aligned: 0 (dim 1) != 2 (dim 0)

>>> print(lazy_matrix_mul([[5, 6], [7, 8]], [[]]))
Traceback (most recent call last):
    ValueError: shapes (2,2) and (1,0) not aligned: 2 (dim 1) != 1 (dim 0)

Invalid Matrices
================

The parameters `m_a` and `m_b` must be lists. If either parameter is not a list, a ValueError is raised.

Examples:
---------
>>> print(lazy_matrix_mul("not a list", [[1, 2]]))
Traceback (most recent call last):
    ValueError: Scalar operands are not allowed, use '*' instead

>>> print(lazy_matrix_mul([[1, 2]], "also not a list"))
Traceback (most recent call last):
    ValueError: Scalar operands are not allowed, use '*' instead

>>> print(lazy_matrix_mul("not a list", "also not a list"))
Traceback (most recent call last):
    ValueError: Scalar operands are not allowed, use '*' instead

